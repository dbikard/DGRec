# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/API/05_predictions.ipynb.

# %% auto 0
__all__ = ['model', 'score', 'score_list']

# %% ../nbs/API/05_predictions.ipynb 2
import pickle
import sklearn
import dgrec
import numpy as np
import pandas as pd

model=pickle.load(open('/home/prochett/DGRec/dgrec/example_data/model_mms_2024_02_14.pickle',"rb"))

# %% ../nbs/API/05_predictions.ipynb 3
def score(TR_seq:str #A string of the TR DNA sequence
):

    """Calculates the predicted score of a given TR sequence (1 = perfect TR and 0 = crappy TR)"""
    encoded_TR=dgrec.encoding.encode_tr_list([TR_seq])
    score=np.round(model.predict_proba([encoded_TR[0]])[:,1],decimals=2).item()
    return score

# %% ../nbs/API/05_predictions.ipynb 5
def score_list(TR_seq_list:list, #A list of strings of TRs DNA sequences
TR_name_list:list, #A list of strings of TRs names
):
    """Calculates the score for every TR in the list and returns them in a dataframe format"""

    encoded_TR=dgrec.encoding.encode_tr_list(TR_seq_list)
    score=np.round(model.predict_proba(encoded_TR)[:,1],decimals=2)
    score_df=pd.DataFrame({
        'TR_Name':TR_name_list,
        'TR_Seq':TR_seq_list,
        'TR_Score':score
    })
    return score_df
