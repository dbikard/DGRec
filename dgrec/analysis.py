# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/API/03_analysis.ipynb.

# %% auto 0
__all__ = ['bases', 'mut_rate']

# %% ../nbs/API/03_analysis.ipynb 2
from .utils import parse_genotypes, str_to_mut
import os
import numpy as np
from Bio import SeqIO
import matplotlib.pyplot as plt

# %% ../nbs/API/03_analysis.ipynb 4
bases=list("ATGC")
def mut_rate(gen_list, #a genotype list with the number of molecules detected
             ran, #the position range in which to compute the mutation rate. If None the rate is computed for the full sequence.
             ref_seq, #reference sequence
             base_restriction = ["A","T","G","C"], #computes the mutation rate only at the base specified
             ):
    """Computes the mutation rate per base within the specified range. The rate can be computed for specific bases using the base_restriction argument."""
    nWT=gen_list[0][1]
    base_counts=dict([(b,ref_seq[ran.start:ran.stop].count(b)) for b in bases])
    nbases=sum([base_counts[b] for b in base_restriction])
    assert(nbases>0)

    nmut=0
    for g,n in gen_list:
        gens=str_to_mut(g)
        mutpos_in_range=np.array([gen[1] in ran for gen in gens if ref_seq[gen[1]] in base_restriction])
        if mutpos_in_range.any():
            nmut+=n

    return (nmut/nWT)/nbases

        
