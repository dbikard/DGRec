# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/API/08_cli.ipynb.

# %% auto 0
__all__ = ['dgrec', 'genotypes', 'genotypes_paired']

# %% ../nbs/API/08_cli.ipynb 4
from fastcore.basics import *
from Bio import SeqIO
import gzip as gz
import os
from collections import defaultdict, Counter
import numpy as np
import itertools
import click
import csv
from .utils import get_mutations, mut_to_str
from .genotypes import get_genotypes
from .genotypes_paired import get_genotypes_paired

# %% ../nbs/API/08_cli.ipynb 8
#Commande line interface
@click.group()
def dgrec():
    pass

# %% ../nbs/API/08_cli.ipynb 9
@dgrec.command('genotypes')
@click.argument('fastq', type=click.Path(exists=True))
@click.argument('ref', type=click.Path(exists=True))
@click.option('--umi_size', '-u', default=10, help="Number of nucleotides at the begining of the read that will be used as the UMI")
@click.option('--quality_threshold', '-q', default=10, help="threshold value used to filter out reads of poor average quality")
@click.option('--ignore_pos', '-i', default=[], multiple=True, help="list of positions that are ignored in the genotype, e.g. [0,1,149,150]")
@click.option('--reads_per_umi_thr', '-r', default=0, help="minimum number of reads required to take a UMI into account. Using a number >2 enables to perform error correction for UMIs with multiple reads")
@click.option('--save_umi_data','-s', default=None, help="path to a csv file to save the details of the genotypes reads for each UMI. If None the data isn't saved.")
@click.option('--output', '-o', default="genotypes.csv", help="output file path")
def genotypes(fastq, ref, umi_size, quality_threshold, ignore_pos, reads_per_umi_thr, save_umi_data, output):
    ref=next(SeqIO.parse(ref,"fasta"))
    ref_seq=str(ref.seq)
    gen_list = get_genotypes(fastq, ref_seq, 
                             umi_size=umi_size, 
                             quality_threshold=quality_threshold, 
                             ignore_pos=ignore_pos,
                             reads_per_umi_thr=reads_per_umi_thr,
                             save_umi_data=save_umi_data)
    
    with open(output,"w") as handle:
            for g,n in gen_list:
                handle.write(f"{g}\t{n}\n")

# %% ../nbs/API/08_cli.ipynb 11
@dgrec.command('genotypes_paired')
@click.argument('fastq_fwd', type=click.Path(exists=True))
@click.argument('fastq_rev', type=click.Path(exists=True))
@click.argument('ref', type=click.Path(exists=True))
@click.option('--fwd_span', nargs=2, type=(int, int), required = True, 
              help ="Span of the reference sequence read in the forward orientation format: (start, end)")
@click.option('--rev_span', nargs=2, type=(int, int), required = True, 
              help ="Span of the reference sequence read in the reverse orientation format: (start, end)")
@click.option('--require_perfect_pair_agreement', '-p', is_flag=True, default=True, 
              help="Require perfect pair agreement for genotype calling (default: True).\
                  If set to False, the forward sequence will be used in case of disagreement.")
@click.option('--umi_size_fwd', '-u1', default=10,
              help="Number of nucleotides at the beginning of the fwd read that will be used as the UMI (default: 10)")
@click.option('--umi_size_rev', '-u2', default=0,
              help="Number of nucleotides at the beginning of the rev read that will be used as the UMI (default: 0)")
@click.option('--quality_threshold', '-q', default=30,
              help="Threshold value used to filter out reads of poor average quality (default: 30)")
@click.option('--ignore_pos', '-i', default=[], multiple=True,
              help="List of positions that are ignored in the genotype (default: [])")
@click.option('--reads_per_umi_thr', '-r', default=0,
              help="Minimum number of reads required to take a UMI into account (default: 0).\
                  Using a number >2 enables to perform error correction for UMIs with multiple reads")
@click.option('--save_umi_data','-s', default=None,
              help="Path to a csv file to save the details of the genotypes reads for each UMI. If None the data isn't saved (default: None)")
@click.option('-n', default=None, help="Number of reads to use. If None all the reads are used (default: None)")
@click.option('--output', '-o', default="genotypes.csv", help="Output file path")
def genotypes_paired(fastq_fwd, fastq_rev, ref, fwd_span, rev_span, require_perfect_pair_agreement, umi_size_fwd, umi_size_rev, quality_threshold, ignore_pos, reads_per_umi_thr, save_umi_data, n, output):
  """Calls dgrec.genotypes_paired.get_genotypes_paired
  """
  ref=next(SeqIO.parse(ref,"fasta"))
  ref_seq=str(ref.seq)
  gen_list = get_genotypes_paired(fastq_fwd, fastq_rev, ref_seq, 
                                   fwd_span=fwd_span, 
                                   rev_span=rev_span,
                                   require_perfect_pair_agreement=require_perfect_pair_agreement,
                                   umi_size_fwd=umi_size_fwd, 
                                   umi_size_rev=umi_size_rev,
                                   quality_threshold=quality_threshold, 
                                   ignore_pos=ignore_pos,
                                   reads_per_umi_thr=reads_per_umi_thr,
                                   save_umi_data=save_umi_data,
                                   N=int(n))
  
  with open(output,"w") as handle:
    for g,n in gen_list:
      handle.write(f"{g}\t{n}\n")

